<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Dashboard</title>
  <script src="https://cdn.jsdelivr.net/npm/chart.js" nonce="<%= nonce %>"></script>
  <style nonce="<%= nonce %>">
    body {
      font-family: Arial, sans-serif;
      margin: 20px;
    }

    h1 {
      text-align: center;
    }

    p {
      text-align: center;
      font-size: 18px;
    }

    .charts {
      display: flex;
      flex-direction: row;
      justify-content: space-around;
      align-items: flex-start;
      gap: 20px;
    }

    .chart-container {
      width: 600px;
      height: 600px;
    }

    canvas {
      display: block;
      width: 100%;
      height: 100%;
    }
  </style>

</head>
<body>
  <h1>Dashboard</h1>
  <p>Total Farms: <%= totalFarms %></p>
  <p>Total Hectares: <%= totalHectares %></p>

  <div class="charts">
    <div class="chart-container">
      <canvas id="farmsByStateChart"></canvas>
    </div>
    <div class="chart-container">
      <canvas id="cropsByTypeChart"></canvas>
    </div>
    <div class="chart-container">
      <canvas id="landUsageChart"></canvas>
    </div>
  </div>

  <script nonce="<%= nonce %>">
    const farmsByState = <%- JSON.stringify(farmsByState) %>;
    const cropsByType = <%- JSON.stringify(cropsByType) %>;
    const landUsage = <%- JSON.stringify(landUsage) %>;

    // Gerar cores dinâmicas
    const generateColors = (length) => {
      const colors = [];
      for (let i = 0; i < length; i++) {
        colors.push(`hsl(${(i * 360) / length}, 70%, 60%)`); // Gera cores com base no espectro HSL
      }
      return colors;
    };

    new Chart(document.getElementById('farmsByStateChart'), {
      type: 'pie',
      data: {
        labels: farmsByState.map((item) => item.state),
        datasets: [
          {
            data: farmsByState.map((item) => item.count),
            backgroundColor: generateColors(farmsByState.length), // Gera cores únicas
          },
        ],
      },
      options: {
        responsive: true,
        maintainAspectRatio: false,
        plugins: {
          legend: {
            display: true,
            position: 'bottom',
            labels: {
              padding: 10,
              boxWidth: 20,
              font: {
                size: 12,
              },
            },
          },
        },
      },
    });

    new Chart(document.getElementById('cropsByTypeChart'), {
      type: 'pie',
      data: {
        labels: cropsByType.map((item) => item.cropName),
        datasets: [
          {
            data: cropsByType.map((item) => item.totalArea),
            backgroundColor: generateColors(cropsByType.length), // Gera cores únicas
          },
        ],
      },
      options: {
        responsive: true,
        maintainAspectRatio: false,
        plugins: {
          legend: {
            display: true,
            position: 'bottom',
            labels: {
              padding: 10,
              boxWidth: 20,
              font: {
                size: 12,
              },
            },
          },
        },
      },
    });

    new Chart(document.getElementById('landUsageChart'), {
      type: 'pie',
      data: {
        labels: ['Arable Area', 'Vegetation Area'],
        datasets: [
          {
            data: [landUsage[0].totalArableArea, landUsage[0].totalVegetationArea],
            backgroundColor: generateColors(2), // Duas cores: Arable e Vegetation
          },
        ],
      },
      options: {
        responsive: true,
        maintainAspectRatio: false,
        plugins: {
          legend: {
            display: true,
            position: 'bottom',
            labels: {
              padding: 10,
              boxWidth: 20,
              font: {
                size: 12,
              },
            },
          },
        },
      },
    });
  </script>



</body>
</html>
